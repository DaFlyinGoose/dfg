// settings/colours/fonts etc
@import "../site/settings";
@import "../foundation/settings";

// This is really fucking annoying
// Because the foundation framework has a global scss
// file that dumps additional meta data into the css
// and does all the basic application of styles without the
// ability to disable it on a individual file level
// because it assumes there will only be one stylesheet (i guess)
// we need to add a variable to each of these files
// to stop it adding SOME (yes not all) of those styles
// it will still add meta vars for the responsive viewports
// which we need to do our media query conditional styling below
$include-html-global-classes: false;

// rem-calc etc
@import "../../bower_components/foundation/scss/foundation/components/global";
@import "../../bower_components/foundation/scss/foundation/functions";

/* page specific styles */

.off-canvas-wrap,
.inner-wrap {
  backface-visibility: visible;
}

.hero {
  position: relative;
  background-image: url(/images/home/bg.hero.jpg);
  background-size: cover;
  background-position: top right;
  background-attachment: fixed;
  @media #{$medium-up} {
    min-height: 428px;
  }
  h3 {
    @media #{$medium-up} {
      padding-top: 100px;
    }
    color: $white;
    font-weight: 100;
    font-size: rem-calc(20);
    padding-left: 20px;
    @media #{$medium-up} {
      padding-left: 0;
      font-size: rem-calc(40);
    }
  }
  ul {
    list-style-type: none;
  }
  li {
    color: $white;
    font-weight: 100;
    font-size: rem-calc(12);
    line-height: rem-calc(26);
    @media #{$medium-up} {
      font-size: rem-calc(26);
      line-height: rem-calc(36);
    }
    a {
      color: $white;
      &:hover {
        color: $lightGrey;
      }
    }
    i {
      font-size: rem-calc(20);
      padding-right: 10px;
    }
    span {
      font-size: rem-calc(12);
    }
  }
  .next {
    display: none;
    @media #{$medium-up} {
      display: block;
      color: $white;
      font-size: rem-calc(60);
      position: absolute;
      bottom: 10px;
      left: 50%;
      margin-left: -30px;
    }
  }
}

.developer {
  padding: 20px 0;
  @media #{$medium-up} {
    padding: 400px 0 200px;
  }
  h3 {
    @media #{$medium-up} {
      padding-top: 50px;
    }
    font-weight: 300;
    font-size: rem-calc(40);
    line-height: rem-calc(40);
    text-align: center;
  }
  img {
    display: block;
    margin: 0 auto;
    border-radius: 100px;
    margin: 0 auto;
    @media #{$medium-up} {
      float: right;
    }
  }
  i {
    padding-top: 20px;
    @media #{$medium-up} {
      padding-top: 100px;
    }
    color: $lightGrey;
    display: block;
    text-align: center;
  }
}

.work {
  padding: 20px 0;
  @media #{$medium-up} {
    padding: 200px 0;
  }
  text-align: center;
  h3 {
    color: $greyCopy;
    font-weight: 100;
    font-size: rem-calc(30);
    line-height: rem-calc(30);
    text-align: center;
    a {
      color: $greyCopy;
      font-weight: 300;
    }
  }
  i {
    padding-top: 20px;
    @media #{$medium-up} {
      padding-top: 100px;
    }
    color: $lightGrey;
    display: block;
    text-align: center;
  }
}

.tech {
  padding-top: 20px;
  @media #{$medium-up} {
    padding-top: 200px;
  }
  h3 {
    font-size: rem-calc(30);
    font-weight: 100;
    padding: 0 0 10px 0;
    @media #{$medium-up} {
      padding: 30px 0;
    }
    span {
      color: #43ac6a; /* TODO(del) */
    }
  }
  h4 {
    font-size: rem-calc(20);
    font-weight: 100;
    padding: 10px 0;
    @media #{$medium-up} {
      padding: 30px 0;
    }
    span {
      color: #008cba; /* TODO(del) */
    }
  }
  .label {
    text-transform: uppercase;
    font-size: rem-calc(16);
    padding: 10px 20px;
    margin: 10px;
    @media #{$medium-up} {
      margin: 0 10px;
    }
    font-weight: 100;
  }
  i {
    padding-top: 20px;
    @media #{$medium-up} {
      padding-top: 100px;
    }
    color: $lightGrey;
    display: block;
    text-align: center;
  }
}

.contact {
  padding: 20px 0;
  @media #{$medium-up} {
    padding: 200px 0;
  }
  h3 {
    padding-bottom: 30px;
    font-weight: 100;
  }
  p {
    font-size: rem-calc(20);
    color: $greyCopy;
    font-weight: 100;
  }
}
